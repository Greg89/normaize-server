name: Dependency Check

on:
  schedule:
    # Run every Monday at 9 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch: # Allow manual trigger

permissions:
  contents: read
  pull-requests: write

env:
  DOTNET_VERSION: '9.0.x'

jobs:
  dependency-check:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Check for outdated packages
      id: outdated-check
      run: |
        echo "## 📦 Dependency Analysis" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        # Check for outdated packages
        echo "### 🔄 Outdated Packages" >> $GITHUB_STEP_SUMMARY
        outdated_output=$(dotnet list package --outdated 2>&1 || true)
        
        if echo "$outdated_output" | grep -q "No packages were found"; then
          echo "✅ All packages are up to date!" >> $GITHUB_STEP_SUMMARY
          echo "up_to_date=true" >> $GITHUB_OUTPUT
        else
          echo "⚠️ Found outdated packages:" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "$outdated_output" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "up_to_date=false" >> $GITHUB_OUTPUT
        fi
        
        echo "" >> $GITHUB_STEP_SUMMARY
        
        # Check for vulnerable packages
        echo "### 🔒 Security Vulnerabilities" >> $GITHUB_STEP_SUMMARY
        vulnerable_output=$(dotnet list package --vulnerable 2>&1 || true)
        
        if echo "$vulnerable_output" | grep -q "No packages were found"; then
          echo "✅ No vulnerable packages found!" >> $GITHUB_STEP_SUMMARY
        else
          echo "🚨 Found vulnerable packages:" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "$vulnerable_output" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
        fi

    - name: Create PR for outdated packages
      if: steps.outdated-check.outputs.up_to_date == 'false'
      uses: actions/github-script@v7
      with:
        script: |
          const { data: existingPrs } = await github.rest.pulls.list({
            owner: context.repo.owner,
            repo: context.repo.repo,
            state: 'open',
            head: 'dependabot/update-dependencies'
          });
          
          if (existingPrs.length > 0) {
            console.log('Dependency update PR already exists');
            return;
          }
          
          // Create a new branch
          const branchName = `dependabot/update-dependencies-${new Date().toISOString().split('T')[0]}`;
          
          try {
            await github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: `refs/heads/${branchName}`,
              sha: context.sha
            });
            
            // Create PR
            await github.rest.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: '🔄 Update Dependencies',
              body: `## Dependency Updates
              
              This PR was automatically created to update outdated dependencies.
              
              ### What's Changed
              - Automated dependency updates
              - Security vulnerability fixes
              
              ### Next Steps
              - [ ] Review the changes
              - [ ] Run tests locally
              - [ ] Merge if everything looks good
              
              ---
              *This PR was automatically generated by GitHub Actions*`,
              head: branchName,
              base: 'main'
            });
            
            console.log(`Created PR for dependency updates: ${branchName}`);
          } catch (error) {
            console.error('Failed to create PR:', error);
          }

    - name: Comment on existing PRs
      if: steps.outdated-check.outputs.up_to_date == 'false'
      uses: actions/github-script@v7
      with:
        script: |
          const { data: prs } = await github.rest.pulls.list({
            owner: context.repo.owner,
            repo: context.repo.repo,
            state: 'open'
          });
          
          for (const pr of prs) {
            if (pr.title.includes('Update Dependencies') || pr.title.includes('Bump')) {
              const comment = `## 📦 Dependency Check Update
              
              This PR has been flagged for dependency updates. Please consider:
              
              - Reviewing the latest dependency versions
              - Testing thoroughly before merging
              - Checking for breaking changes
              
              ---
              *This comment was automatically generated by GitHub Actions*`;
              
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pr.number,
                body: comment
              });
            }
          } 